209. Minimum Size Subarray Sum
Medium

Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum â‰¥ s. If there isn't one, return 0 instead.

Example: 

Input: s = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: the subarray [4,3] has the minimal length under the problem constraint.

Follow up:
If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log n). 
--------------------------Solution--------------------------//nabajyoti majumdar
class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        if(nums.size()==0) return 0;
        int i=0,j=0,sum=0,mini=INT_MAX;
        while(j<nums.size()){
            sum+=nums[j++];
            while(sum>=s){
                mini=min(mini,j-i);
                sum-=nums[i++];
            }
        }
        if(mini==INT_MAX) return 0;
        else return mini;
    }
};
