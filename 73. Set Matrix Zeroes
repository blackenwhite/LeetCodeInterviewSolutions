Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in-place.

Example 1:

Input: 
[
  [1,1,1],
  [1,0,1],
  [1,1,1]
]
Output: 
[
  [1,0,1],
  [0,0,0],
  [1,0,1]
]

Example 2:

Input: 
[
  [0,1,2,0],
  [3,4,5,2],
  [1,3,1,5]
]
Output: 
[
  [0,0,0,0],
  [0,4,5,0],
  [0,3,1,0]
]

Follow up:

    A straight forward solution using O(mn) space is probably a bad idea.
    A simple improvement uses O(m + n) space, but still not the best solution.
    Could you devise a constant space solution?


---------------------Solution=---------------//nabajyoti majumdar
class Solution {
public:
    bool check_first_row(vector<vector<int>>& matrix){
        int i=0;
        int j=0;
        for(j=0;j<matrix[0].size();j++){
            if(matrix[i][j]==0) return true;
        }
        return false;
    }
    
    bool check_first_col(vector<vector<int>>& matrix){
        int i=0;
        int j=0;
        for(i=0;i<matrix.size();i++){
            if(matrix[i][j]==0) return true;
        }
        return false;
    }
    void setZeroes(vector<vector<int>>& matrix) {
        int ohe=1;
        bool c1=check_first_row(matrix);
        bool c2=check_first_col(matrix);
        if(c1 && c2) ohe=5;
        if(c1 &&!c2) ohe=3;
        if(!c1 && c2) ohe=4;
        
        
        // check for the internal rows and columns
        for (int i=1;i<matrix.size();i++){
            for (int j=1;j<matrix[0].size();j++){
                if(matrix[i][j]==0){
                    matrix[i][0]=0;
                    matrix[0][j]=0;
                }
            }
        }
        
        // change the internal structure
        
        for(int i=1;i<matrix.size();i++){
            for(int j=1;j<matrix[i].size();j++){
                if(matrix[i][0]==0 || matrix[0][j]==0){
                    matrix[i][j]=0;
                }
            }
            
        }
        
        if(c1){
            for(int j=0;j<matrix[0].size();j++)
                matrix[0][j]=0;
        }
        if(c2){
            for(int i=0;i<matrix.size();i++)
                matrix[i][0]=0;
        }
        
    }
};
