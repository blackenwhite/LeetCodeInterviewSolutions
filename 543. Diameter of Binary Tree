Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Example:
Given a binary tree
          1
         / \
        2   3
       / \     
      4   5    
Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].

Note: The length of path between two nodes is represented by the number of edges between them.
------------------------Solution---------------------------
class Solution {
public:
    pair<int,int> heightDiameter(TreeNode* root){
        if(root==NULL){
            pair<int,int>p;
            p.first=0;
            p.second=0;
            return p;
        }
        pair<int,int> leftAns=heightDiameter(root->left);
        pair<int,int> rightAns=heightDiameter(root->right);
        int ld=leftAns.second;
        int lh=leftAns.first;
        int rd=rightAns.second;
        int rh=rightAns.first;
        int height=1+max(rh,lh);
        int diameter=max(lh+rh,max(ld,rd));
        pair<int,int> p;
        p.first=height;
        p.second=diameter;
        return p;
    }
    
    
    int diameterOfBinaryTree(TreeNode* root) {
        pair<int,int> p=heightDiameter(root);
        return p.second;
    }
};
